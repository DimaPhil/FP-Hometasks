
==================== FINAL INTERFACE ====================
2016-11-28 14:56:45.97189 UTC

interface hw8-0.1.0.0-JYzRyvYdyOz8QS5p7KNV9n:TransformersInstances 8001
  interface hash: 80a5ab5a90405d000f05349ca20ec408
  ABI hash: ef958c5e79db9a3fdfc8b0f0b7f2e909
  export-list hash: b1971c3a7508e6dc3bb821b814a0626f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5a595dbb2829f2eae08395c08f428f01
  sig of: Nothing
  used TH splices: False
  where
exports:
  TransformersInstances.EitherT{TransformersInstances.EitherT runEitherT}
  TransformersInstances.StateT{TransformersInstances.StateT runStateT}
  TransformersInstances.WriterT{TransformersInstances.WriterT runWriterT}
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.Monoid 1efae021212a10c79fd75960dc0a1d99
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Class dbb3e20cde5546fe0eb9f9b8c0fb8ef4
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    GHC.Base.Monad (TransformersInstances.EitherT e m)
  DFunId
  {- Arity: 2, Strictness: <L,U><L,U(A,C(C1(U)),A,C(U),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ e
                      @ (m :: * -> *)
                      ($dApplicative :: GHC.Base.Applicative
                                          (TransformersInstances.EitherT e m))
                      ($dMonad :: GHC.Base.Monad m).
                  @ (TransformersInstances.EitherT e m)
                  (TransformersInstances.$fMonadEitherT_$cp1Monad
                     @ e
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadEitherT_$c>>=
                     @ e
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadEitherT_$c>>
                     @ e
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadEitherT_$creturn
                     @ e
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadEitherT_$cfail
                     @ e
                     @ m
                     $dApplicative
                     $dMonad) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT1 ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    GHC.Base.String -> TransformersInstances.EitherT e m a
  {- Arity: 3, Strictness: <B,A><B,A><B,U>x, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ e
                   @ (m :: * -> *)
                   @ a
                   (w :: GHC.Base.Applicative (TransformersInstances.EitherT e m))
                   (w1 :: GHC.Base.Monad m)
                   (w2 :: GHC.Base.String) ->
                 TransformersInstances.$wlvl @ e @ m @ a w2) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT2 ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    forall a. a -> m (Data.Either.Either e a)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ e
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.EitherT e m))
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   (a1 :: a) ->
                 GHC.Base.return
                   @ m
                   $dMonad
                   @ (Data.Either.Either e a)
                   (Data.Either.Right @ e @ a a1)) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT3 ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.EitherT e m a
    -> (a -> TransformersInstances.EitherT e m b)
    -> m (Data.Either.Either e b)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ e
                   @ (m :: * -> *)
                   (w :: GHC.Base.Applicative (TransformersInstances.EitherT e m))
                   (w1 :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (w2 :: TransformersInstances.EitherT e m a)
                   (w3 :: a -> TransformersInstances.EitherT e m b) ->
                 TransformersInstances.$w$c>>= @ e @ m w1 @ a @ b w2 w3) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT_$c>> ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.EitherT e m a
    -> TransformersInstances.EitherT e m b
    -> TransformersInstances.EitherT e m b
  {- Arity: 4, Strictness: <L,U><L,U(A,C(C1(U)),A,C(U),A)><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (4, False, False)
                (\ @ e
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.EitherT e m))
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (m1 :: TransformersInstances.EitherT e m a)
                   (k :: TransformersInstances.EitherT e m b) ->
                 TransformersInstances.$fMonadEitherT_$c>>=
                   @ e
                   @ m
                   $dApplicative
                   $dMonad
                   @ a
                   @ b
                   m1
                   (\ (ds :: a) -> k)) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT_$c>>= ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.EitherT e m a
    -> (a -> TransformersInstances.EitherT e m b)
    -> TransformersInstances.EitherT e m b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadEitherT3
                  `cast`
                (forall (e :: <*>_N) (m :: <* -> *>_N).
                 <GHC.Base.Applicative (TransformersInstances.EitherT e m)>_R
                 ->_R <GHC.Base.Monad m>_R
                 ->_R forall (a :: <*>_N) (b :: <*>_N).
                      <TransformersInstances.EitherT e m a>_R
                      ->_R <a -> TransformersInstances.EitherT e m b>_R
                      ->_R Sym (TransformersInstances.N:EitherT[0] <e>_N <m>_R <b>_N)) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT_$cfail ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    forall a. GHC.Base.String -> TransformersInstances.EitherT e m a
  {- Arity: 3, Strictness: <B,A><B,A><B,U>x,
     Unfolding: InlineRule (3, True, True)
                (\ @ e
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.EitherT e m))
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   (eta :: GHC.Base.String) ->
                 TransformersInstances.$fMonadEitherT1
                   @ e
                   @ m
                   @ a
                   $dApplicative
                   $dMonad
                   eta) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT_$cp1Monad ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    GHC.Base.Applicative (TransformersInstances.EitherT e m)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ e
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.EitherT e m))
                   ($dMonad :: GHC.Base.Monad m) ->
                 $dApplicative) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadEitherT_$creturn ::
    (GHC.Base.Applicative (TransformersInstances.EitherT e m),
     GHC.Base.Monad m) =>
    forall a. a -> TransformersInstances.EitherT e m a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadEitherT2
                  `cast`
                (forall (e :: <*>_N) (m :: <* -> *>_N).
                 <GHC.Base.Applicative (TransformersInstances.EitherT e m)>_R
                 ->_R <GHC.Base.Monad m>_R
                 ->_R forall (a :: <*>_N).
                      <a>_R
                      ->_R Sym (TransformersInstances.N:EitherT[0] <e>_N <m>_R <a>_N)) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    GHC.Base.Monad (TransformersInstances.StateT s m)
  DFunId
  {- Arity: 2, Strictness: <L,U><L,U(A,C(C1(U)),A,C(U),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s
                      @ (m :: * -> *)
                      ($dApplicative :: GHC.Base.Applicative
                                          (TransformersInstances.StateT s m))
                      ($dMonad :: GHC.Base.Monad m).
                  @ (TransformersInstances.StateT s m)
                  (TransformersInstances.$fMonadStateT_$cp1Monad
                     @ s
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadStateT_$c>>=
                     @ s
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadStateT_$c>>
                     @ s
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadStateT_$creturn
                     @ s
                     @ m
                     $dApplicative
                     $dMonad)
                  (TransformersInstances.$fMonadStateT_$cfail
                     @ s
                     @ m
                     $dApplicative
                     $dMonad) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT1 ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    GHC.Base.String -> TransformersInstances.StateT s m a
  {- Arity: 3, Strictness: <B,A><B,A><B,U>x, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ s
                   @ (m :: * -> *)
                   @ a
                   (w :: GHC.Base.Applicative (TransformersInstances.StateT s m))
                   (w1 :: GHC.Base.Monad m)
                   (w2 :: GHC.Base.String) ->
                 TransformersInstances.$wlvl1 @ s @ m @ a w2) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT2 ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    forall a. a -> s -> m (a, s)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.StateT s m))
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   (a1 :: a)
                   (s1 :: s) ->
                 GHC.Base.return @ m $dMonad @ (a, s) (a1, s1)) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT3 ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.StateT s m a
    -> (a -> TransformersInstances.StateT s m b) -> s -> m (b, s)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLL),1*U(A,1*C1(C1(U)),A,A,A)><L,1*C1(U)><L,C(C1(U))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ s
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.StateT s m))
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (m1 :: TransformersInstances.StateT s m a)
                   (f :: a -> TransformersInstances.StateT s m b)
                   (eta :: s) ->
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (a, s)
                   @ (b, s)
                   (m1 `cast` (TransformersInstances.N:StateT[0] <s>_N <m>_R <a>_N)
                      eta)
                   (\ (ds :: (a, s)) ->
                    case ds of wild { (,) a1 s' ->
                    (f a1) `cast` (TransformersInstances.N:StateT[0] <s>_N <m>_R <b>_N)
                      s' })) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT_$c>> ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.StateT s m a
    -> TransformersInstances.StateT s m b
    -> TransformersInstances.StateT s m b
  {- Arity: 4, Strictness: <L,U><L,U(A,C(C1(U)),A,C(U),A)><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (4, False, False)
                (\ @ s
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.StateT s m))
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (m1 :: TransformersInstances.StateT s m a)
                   (k :: TransformersInstances.StateT s m b)
                   (eta :: s) ->
                 (TransformersInstances.$fMonadStateT_$c>>=
                    @ s
                    @ m
                    $dApplicative
                    $dMonad
                    @ a
                    @ b
                    m1
                    (\ (ds :: a) -> k))
                   `cast`
                 (TransformersInstances.N:StateT[0] <s>_N <m>_R <b>_N)
                   eta)
                  `cast`
                (forall (s :: <*>_N) (m :: <* -> *>_N).
                 <GHC.Base.Applicative (TransformersInstances.StateT s m)>_R
                 ->_R <GHC.Base.Monad m>_R
                 ->_R forall (a :: <*>_N) (b :: <*>_N).
                      <TransformersInstances.StateT s m a>_R
                      ->_R <TransformersInstances.StateT s m b>_R
                      ->_R Sym (TransformersInstances.N:StateT[0] <s>_N <m>_R <b>_N)) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT_$c>>= ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.StateT s m a
    -> (a -> TransformersInstances.StateT s m b)
    -> TransformersInstances.StateT s m b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLL),1*U(A,1*C1(C1(U)),A,A,A)><L,1*C1(U)><L,C(C1(U))><L,U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadStateT3
                  `cast`
                (forall (s :: <*>_N) (m :: <* -> *>_N).
                 <GHC.Base.Applicative (TransformersInstances.StateT s m)>_R
                 ->_R <GHC.Base.Monad m>_R
                 ->_R forall (a :: <*>_N) (b :: <*>_N).
                      <TransformersInstances.StateT s m a>_R
                      ->_R <a -> TransformersInstances.StateT s m b>_R
                      ->_R Sym (TransformersInstances.N:StateT[0] <s>_N <m>_R <b>_N)) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT_$cfail ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    forall a. GHC.Base.String -> TransformersInstances.StateT s m a
  {- Arity: 3, Strictness: <B,A><B,A><B,U>x,
     Unfolding: InlineRule (3, True, True)
                (\ @ s
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.StateT s m))
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   (eta :: GHC.Base.String) ->
                 TransformersInstances.$fMonadStateT1
                   @ s
                   @ m
                   @ a
                   $dApplicative
                   $dMonad
                   eta) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT_$cp1Monad ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    GHC.Base.Applicative (TransformersInstances.StateT s m)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ s
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.StateT s m))
                   ($dMonad :: GHC.Base.Monad m) ->
                 $dApplicative) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadStateT_$creturn ::
    (GHC.Base.Applicative (TransformersInstances.StateT s m),
     GHC.Base.Monad m) =>
    forall a. a -> TransformersInstances.StateT s m a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadStateT2
                  `cast`
                (forall (s :: <*>_N) (m :: <* -> *>_N).
                 <GHC.Base.Applicative (TransformersInstances.StateT s m)>_R
                 ->_R <GHC.Base.Monad m>_R
                 ->_R forall (a :: <*>_N).
                      <a>_R
                      ->_R Sym (TransformersInstances.N:StateT[0] <s>_N <m>_R <a>_N)) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadTransEitherT ::
    Control.Monad.Trans.Class.MonadTrans
      (TransformersInstances.EitherT l)
  DFunId
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                TransformersInstances.$fMonadTransEitherT_$clift
                  `cast`
                (forall (l :: <*>_N).
                 Sym (Control.Monad.Trans.Class.N:MonadTrans[0]
                          <TransformersInstances.EitherT l>_N)) -}
772dd89777b224ee25f695c296dfe914
  $fMonadTransEitherT1 ::
    GHC.Base.Monad m => m a -> m (Data.Either.Either l a)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ l
                   @ (m :: * -> *)
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (m1 :: m a) ->
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ a
                   @ (Data.Either.Either l a)
                   m1
                   (\ (result :: a) ->
                    GHC.Base.return
                      @ m
                      $dMonad
                      @ (Data.Either.Either l a)
                      (Data.Either.Right @ l @ a result))) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $fMonadTransEitherT_$clift ::
    GHC.Base.Monad m => m a -> TransformersInstances.EitherT l m a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadTransEitherT1
                  `cast`
                (forall (l :: <*>_N) (m :: <* -> *>_N) (a :: <*>_N).
                 <GHC.Base.Monad m>_R
                 ->_R <m a>_R
                 ->_R Sym (TransformersInstances.N:EitherT[0] <l>_N <m>_R <a>_N)) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadTransStateT ::
    Control.Monad.Trans.Class.MonadTrans
      (TransformersInstances.StateT s)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U><L,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                TransformersInstances.$fMonadTransStateT_$clift
                  `cast`
                (forall (s :: <*>_N).
                 Sym (Control.Monad.Trans.Class.N:MonadTrans[0]
                          <TransformersInstances.StateT s>_N)) -}
042969823224dfc4abaf6c970fc021d4
  $fMonadTransStateT1 :: GHC.Base.Monad m => m a -> s -> m (a, s)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (m :: * -> *)
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (m1 :: m a)
                   (s1 :: s) ->
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ a
                   @ (a, s)
                   m1
                   (\ (result :: a) ->
                    GHC.Base.return @ m $dMonad @ (a, s) (result, s1))) -}
3433df24d76aefe7ebdaa5806cddedaa
  $fMonadTransStateT_$clift ::
    GHC.Base.Monad m => m a -> TransformersInstances.StateT s m a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadTransStateT1
                  `cast`
                (forall (s :: <*>_N) (m :: <* -> *>_N) (a :: <*>_N).
                 <GHC.Base.Monad m>_R
                 ->_R <m a>_R
                 ->_R Sym (TransformersInstances.N:StateT[0] <s>_N <m>_R <a>_N)) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadTransWriterT ::
    GHC.Base.Monoid w =>
    Control.Monad.Trans.Class.MonadTrans
      (TransformersInstances.WriterT w)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(1*U,A,A)><S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                TransformersInstances.$fMonadTransWriterT_$clift
                  `cast`
                (forall (w :: <*>_N).
                 <GHC.Base.Monoid w>_R
                 ->_R Sym (Control.Monad.Trans.Class.N:MonadTrans[0]
                               <TransformersInstances.WriterT w>_N)) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadTransWriterT_$clift ::
    GHC.Base.Monoid w =>
    forall (m :: * -> *) a.
    GHC.Base.Monad m =>
    m a -> TransformersInstances.WriterT w m a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(1*U,A,A)><S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U>,
     Unfolding: (\ @ w
                   ($dMonoid :: GHC.Base.Monoid w)
                   @ (m :: * -> *)
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (m1 :: m a) ->
                 let {
                   lvl :: w = GHC.Base.mempty @ w $dMonoid
                 } in
                 (GHC.Base.>>=
                    @ m
                    $dMonad
                    @ a
                    @ (a, w)
                    m1
                    (\ (result :: a) ->
                     GHC.Base.return @ m $dMonad @ (a, w) (result, lvl)))
                   `cast`
                 (Sym (TransformersInstances.N:WriterT[0] <w>_N <m>_R <a>_N))) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    GHC.Base.Monad (TransformersInstances.WriterT w m)
  DFunId
  {- Arity: 3,
     Strictness: <L,U><L,U(U,C(C1(U)),A)><L,U(A,C(C1(U)),A,C(U),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ w
                      @ (m :: * -> *)
                      ($dApplicative :: GHC.Base.Applicative
                                          (TransformersInstances.WriterT w m))
                      ($dMonoid :: GHC.Base.Monoid w)
                      ($dMonad :: GHC.Base.Monad m).
                  @ (TransformersInstances.WriterT w m)
                  (TransformersInstances.$fMonadWriterT_$cp1Monad
                     @ w
                     @ m
                     $dApplicative
                     $dMonoid
                     $dMonad)
                  (TransformersInstances.$fMonadWriterT_$c>>=
                     @ w
                     @ m
                     $dApplicative
                     $dMonoid
                     $dMonad)
                  (TransformersInstances.$fMonadWriterT_$c>>
                     @ w
                     @ m
                     $dApplicative
                     $dMonoid
                     $dMonad)
                  (TransformersInstances.$fMonadWriterT_$creturn
                     @ w
                     @ m
                     $dApplicative
                     $dMonoid
                     $dMonad)
                  (TransformersInstances.$fMonadWriterT_$cfail
                     @ w
                     @ m
                     $dApplicative
                     $dMonoid
                     $dMonad) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT1 ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    GHC.Base.String -> TransformersInstances.WriterT w m a
  {- Arity: 4, Strictness: <B,A><B,A><B,A><B,U>x, Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ w
                   @ (m :: * -> *)
                   @ a
                   (w1 :: GHC.Base.Applicative (TransformersInstances.WriterT w m))
                   (w2 :: GHC.Base.Monoid w)
                   (w3 :: GHC.Base.Monad m)
                   (w4 :: GHC.Base.String) ->
                 TransformersInstances.$wlvl2 @ w @ m @ a w4) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT2 ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    forall a. a -> m (a, w)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><L,1*U(1*U,A,A)><S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ w
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.WriterT w m))
                   ($dMonoid :: GHC.Base.Monoid w)
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   (a1 :: a) ->
                 GHC.Base.return
                   @ m
                   $dMonad
                   @ (a, w)
                   (a1, GHC.Base.mempty @ w $dMonoid)) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT3 ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.WriterT w m a
    -> (a -> TransformersInstances.WriterT w m b) -> m (b, w)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,U(A,C(C1(U)),A)><S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,U><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ w
                   @ (m :: * -> *)
                   (w1 :: GHC.Base.Applicative (TransformersInstances.WriterT w m))
                   (w2 :: GHC.Base.Monoid w)
                   (w3 :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (w4 :: TransformersInstances.WriterT w m a)
                   (w5 :: a -> TransformersInstances.WriterT w m b) ->
                 TransformersInstances.$w$c>>=1 @ w @ m w2 w3 @ a @ b w4 w5) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT_$c>> ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.WriterT w m a
    -> TransformersInstances.WriterT w m b
    -> TransformersInstances.WriterT w m b
  {- Arity: 5,
     Strictness: <L,U><L,U(U,C(C1(U)),A)><L,U(A,C(C1(U)),A,C(U),A)><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (5, False, False)
                (\ @ w
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.WriterT w m))
                   ($dMonoid :: GHC.Base.Monoid w)
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (m1 :: TransformersInstances.WriterT w m a)
                   (k :: TransformersInstances.WriterT w m b) ->
                 TransformersInstances.$fMonadWriterT_$c>>=
                   @ w
                   @ m
                   $dApplicative
                   $dMonoid
                   $dMonad
                   @ a
                   @ b
                   m1
                   (\ (ds :: a) -> k)) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT_$c>>= ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.WriterT w m a
    -> (a -> TransformersInstances.WriterT w m b)
    -> TransformersInstances.WriterT w m b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,U(A,C(C1(U)),A)><S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,U><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadWriterT3
                  `cast`
                (forall (w :: <*>_N) (m :: <* -> *>_N).
                 <GHC.Base.Applicative (TransformersInstances.WriterT w m)>_R
                 ->_R <GHC.Base.Monoid w>_R
                 ->_R <GHC.Base.Monad m>_R
                 ->_R forall (a :: <*>_N) (b :: <*>_N).
                      <TransformersInstances.WriterT w m a>_R
                      ->_R <a -> TransformersInstances.WriterT w m b>_R
                      ->_R Sym (TransformersInstances.N:WriterT[0] <w>_N <m>_R <b>_N)) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT_$cfail ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    forall a. GHC.Base.String -> TransformersInstances.WriterT w m a
  {- Arity: 4, Strictness: <B,A><B,A><B,A><B,U>x,
     Unfolding: InlineRule (4, True, True)
                (\ @ w
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.WriterT w m))
                   ($dMonoid :: GHC.Base.Monoid w)
                   ($dMonad :: GHC.Base.Monad m)
                   @ a
                   (eta :: GHC.Base.String) ->
                 TransformersInstances.$fMonadWriterT1
                   @ w
                   @ m
                   @ a
                   $dApplicative
                   $dMonoid
                   $dMonad
                   eta) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT_$cp1Monad ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    GHC.Base.Applicative (TransformersInstances.WriterT w m)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ @ w
                   @ (m :: * -> *)
                   ($dApplicative :: GHC.Base.Applicative
                                       (TransformersInstances.WriterT w m))
                   ($dMonoid :: GHC.Base.Monoid w)
                   ($dMonad :: GHC.Base.Monad m) ->
                 $dApplicative) -}
eb72cfabb7fda87a20f92a9da8017187
  $fMonadWriterT_$creturn ::
    (GHC.Base.Applicative (TransformersInstances.WriterT w m),
     GHC.Base.Monoid w, GHC.Base.Monad m) =>
    forall a. a -> TransformersInstances.WriterT w m a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><L,1*U(1*U,A,A)><S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.$fMonadWriterT2
                  `cast`
                (forall (w :: <*>_N) (m :: <* -> *>_N).
                 <GHC.Base.Applicative (TransformersInstances.WriterT w m)>_R
                 ->_R <GHC.Base.Monoid w>_R
                 ->_R <GHC.Base.Monad m>_R
                 ->_R forall (a :: <*>_N).
                      <a>_R
                      ->_R Sym (TransformersInstances.N:WriterT[0] <w>_N <m>_R <a>_N)) -}
c73540af3c927996abe294ea77142604
  $tc'EitherT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17921331716131848236##
                   11743358419974432645##
                   TransformersInstances.$trModule
                   TransformersInstances.$tc'EitherT1) -}
268ac246993f4dd7f70686a1e615f05b
  $tc'EitherT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EitherT"#) -}
6aa8b3cb9da7cc71a1bce28cdccb26b7
  $tc'StateT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4472571832146070568##
                   18003634408933238396##
                   TransformersInstances.$trModule
                   TransformersInstances.$tc'StateT1) -}
801b1c87e7b8363ff071f89ff3780aa6
  $tc'StateT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StateT"#) -}
f63d7b2ce27b92dd8eeb1a49c6715a37
  $tc'WriterT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8443538852913878027##
                   1393990371636082743##
                   TransformersInstances.$trModule
                   TransformersInstances.$tc'WriterT1) -}
a62fc6c5dea51371920a8fedefaf8fcc
  $tc'WriterT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WriterT"#) -}
5a007cd6dc1d7142303198f7d946f0e3
  $tcEitherT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8886834574086919890##
                   17204402258819186585##
                   TransformersInstances.$trModule
                   TransformersInstances.$tcEitherT1) -}
9c8388514f4778ab4ae8ac5eada50a30
  $tcEitherT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "EitherT"#) -}
1159abbf90dbe0eb4dc42d2ccf94a35a
  $tcStateT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5652765941481387702##
                   4427987430736224314##
                   TransformersInstances.$trModule
                   TransformersInstances.$tcStateT1) -}
b159e27b54559526ce8114915d5a46c1
  $tcStateT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "StateT"#) -}
3c9fa10d24cd70d40d4b7d78afba1a6b
  $tcWriterT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9748165917588680447##
                   14917124400450177175##
                   TransformersInstances.$trModule
                   TransformersInstances.$tcWriterT1) -}
fe1551fc940f2af9ddc140a3892b8df8
  $tcWriterT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "WriterT"#) -}
9095f846a9c3246a6ed81ed3cee3eea3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TransformersInstances.$trModule2
                   TransformersInstances.$trModule1) -}
ca6df1bad62c62fb707c2ef03e4436ee
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TransformersInstances"#) -}
0863108645a4310cd2a8bf168ab468bf
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "hw8-0.1.0.0-JYzRyvYdyOz8QS5p7KNV9n"#) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $w$c>>= ::
    GHC.Base.Monad m =>
    forall a b.
    TransformersInstances.EitherT e m a
    -> (a -> TransformersInstances.EitherT e m b)
    -> m (Data.Either.Either e b)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,1*C1(C1(U)),A,C(U),A)><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ e
                   @ (m :: * -> *)
                   (w :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (w1 :: TransformersInstances.EitherT e m a)
                   (w2 :: a -> TransformersInstances.EitherT e m b) ->
                 GHC.Base.>>=
                   @ m
                   w
                   @ (Data.Either.Either e a)
                   @ (Data.Either.Either e b)
                   w1 `cast` (TransformersInstances.N:EitherT[0] <e>_N <m>_R <a>_N)
                   (\ (result :: Data.Either.Either e a) ->
                    case result of wild {
                      Data.Either.Left x
                      -> GHC.Base.return
                           @ m
                           w
                           @ (Data.Either.Either e b)
                           (Data.Either.Left @ e @ b x)
                      Data.Either.Right x
                      -> (w2 x)
                           `cast`
                         (TransformersInstances.N:EitherT[0] <e>_N <m>_R <b>_N) })) -}
eb72cfabb7fda87a20f92a9da8017187
  $w$c>>=1 ::
    (GHC.Base.Monoid w, GHC.Base.Monad m) =>
    forall a b.
    TransformersInstances.WriterT w m a
    -> (a -> TransformersInstances.WriterT w m b) -> m (b, w)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A)><S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ w
                   @ (m :: * -> *)
                   (w1 :: GHC.Base.Monoid w)
                   (w2 :: GHC.Base.Monad m)
                   @ a
                   @ b
                   (w3 :: TransformersInstances.WriterT w m a)
                   (w4 :: a -> TransformersInstances.WriterT w m b) ->
                 GHC.Base.>>=
                   @ m
                   w2
                   @ (a, w)
                   @ (b, w)
                   w3 `cast` (TransformersInstances.N:WriterT[0] <w>_N <m>_R <a>_N)
                   (\ (ds :: (a, w)) ->
                    case ds of wild { (,) a1 w5 ->
                    GHC.Base.>>=
                      @ m
                      w2
                      @ (b, w)
                      @ (b, w)
                      (w4 a1)
                        `cast`
                      (TransformersInstances.N:WriterT[0] <w>_N <m>_R <b>_N)
                      (\ (ds1 :: (b, w)) ->
                       case ds1 of wild1 { (,) b1 w' ->
                       GHC.Base.return
                         @ m
                         w2
                         @ (b, w)
                         (b1, GHC.Base.mappend @ w w1 w5 w') }) })) -}
4af9389cd2a5f49250ec2d695cf4c8ec
  $wlvl :: GHC.Base.String -> TransformersInstances.EitherT e m a
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
3433df24d76aefe7ebdaa5806cddedaa
  $wlvl1 :: GHC.Base.String -> TransformersInstances.StateT s m a
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
eb72cfabb7fda87a20f92a9da8017187
  $wlvl2 :: GHC.Base.String -> TransformersInstances.WriterT w m a
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
4af9389cd2a5f49250ec2d695cf4c8ec
  type role EitherT nominal representational nominal
  newtype EitherT e (m :: * -> *) a
    = EitherT {runEitherT :: m (Data.Either.Either e a)}
3433df24d76aefe7ebdaa5806cddedaa
  type role StateT nominal representational nominal
  newtype StateT s (m :: * -> *) a
    = StateT {runStateT :: s -> m (a, s)}
eb72cfabb7fda87a20f92a9da8017187
  type role WriterT nominal representational nominal
  newtype WriterT w (m :: * -> *) a
    = WriterT {runWriterT :: m (a, w)}
b4ce2a8616bf4ea32a5539f2e39628d6
  runEitherT ::
    TransformersInstances.EitherT e m a -> m (Data.Either.Either e a)
  RecSel Left TransformersInstances.EitherT
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.runEitherT1
                  `cast`
                (forall (e :: <*>_N) (m :: <* -> *>_N) (a :: <*>_N).
                 <TransformersInstances.EitherT e m a>_R
                 ->_R TransformersInstances.N:EitherT[0] <e>_N <m>_R <a>_N) -}
011f3c5d54e6c83d8aedeb36765ddd87
  runEitherT1 ::
    TransformersInstances.EitherT e m a
    -> TransformersInstances.EitherT e m a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ e
                   @ (m :: * -> *)
                   @ a
                   (ds :: TransformersInstances.EitherT e m a) ->
                 ds) -}
7effe9604c18c8b806c053a081fb858e
  runStateT :: TransformersInstances.StateT s m a -> s -> m (a, s)
  RecSel Left TransformersInstances.StateT
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.runStateT1
                  `cast`
                (forall (s :: <*>_N) (m :: <* -> *>_N) (a :: <*>_N).
                 <TransformersInstances.StateT s m a>_R
                 ->_R TransformersInstances.N:StateT[0] <s>_N <m>_R <a>_N) -}
4dcb0f68cdc156484fd50b983c107853
  runStateT1 ::
    TransformersInstances.StateT s m a
    -> TransformersInstances.StateT s m a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ s
                   @ (m :: * -> *)
                   @ a
                   (ds :: TransformersInstances.StateT s m a) ->
                 ds) -}
0c84358e0e0148433a63d9488e4c8a91
  runWriterT :: TransformersInstances.WriterT w m a -> m (a, w)
  RecSel Left TransformersInstances.WriterT
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                TransformersInstances.runWriterT1
                  `cast`
                (forall (w :: <*>_N) (m :: <* -> *>_N) (a :: <*>_N).
                 <TransformersInstances.WriterT w m a>_R
                 ->_R TransformersInstances.N:WriterT[0] <w>_N <m>_R <a>_N) -}
c03949bd7139d7080280f1fb8b72edf3
  runWriterT1 ::
    TransformersInstances.WriterT w m a
    -> TransformersInstances.WriterT w m a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ w
                   @ (m :: * -> *)
                   @ a
                   (ds :: TransformersInstances.WriterT w m a) ->
                 ds) -}
instance [safe] GHC.Base.Monad [TransformersInstances.EitherT]
  = TransformersInstances.$fMonadEitherT
instance [safe] GHC.Base.Monad [TransformersInstances.StateT]
  = TransformersInstances.$fMonadStateT
instance [safe] Control.Monad.Trans.Class.MonadTrans [TransformersInstances.EitherT]
  = TransformersInstances.$fMonadTransEitherT
instance [safe] Control.Monad.Trans.Class.MonadTrans [TransformersInstances.StateT]
  = TransformersInstances.$fMonadTransStateT
instance [safe] Control.Monad.Trans.Class.MonadTrans [TransformersInstances.WriterT]
  = TransformersInstances.$fMonadTransWriterT
instance [safe] GHC.Base.Monad [TransformersInstances.WriterT]
  = TransformersInstances.$fMonadWriterT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

