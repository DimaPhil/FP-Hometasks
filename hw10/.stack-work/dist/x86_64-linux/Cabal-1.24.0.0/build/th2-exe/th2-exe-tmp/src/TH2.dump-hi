
==================== FINAL INTERFACE ====================
2016-12-01 16:22:04.10177 UTC

interface main@main:TH2 8001
  interface hash: 62df8790eaaacc1905ea7eadc5844531
  ABI hash: 5ab8c87c780e66538fbe826be2021e33
  export-list hash: 0f86437a940ddb6683aa551eae5e64c4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d1b21f6f1e3b64fd5e284b67f1744e20
  sig of: Nothing
  used TH splices: True
  where
exports:
  TH2.th2
module dependencies: EnvShow
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      template-haskell-2.11.0.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  EnvShow cabdde457b1357ebdd1d778b89dd6edc
  exports: a0a23513e8a8a927070c99da69ece78b
  envTemplate 431fdeacf0b6a9fd0c779ee8a4c769d0
d6bea9e2a4bec489b798c664e07d2415
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module TH2.$trModule2 TH2.$trModule1) -}
0eb38c980fe3f2c9c9db1d2d37557288
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TH2"#) -}
2ccf1057267ffee46769f695af7e2cdf
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
f74b2e70dee49503013654f0f2df0e8a
  th1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   TH2.th3
                   GHC.Types.True
                   eta) -}
f2fade034fe62193ab0713ae81d6ae44
  th2 :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                TH2.th1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
15051adeb33e059641249e6697fe4556
  th3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   TH2.th4) -}
35b0ec47ccbd0a0afb53c3e5a0e10544
  th4 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString TH2.th6 TH2.th5) -}
ee28f37cd08b7821a761cc696725394c
  th5 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   (GHC.Types.[] @ GHC.Types.Char)) -}
eb1a8d52f86c64fb1d0f6ee9f50d0113
  th6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TH_ENV=bar"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

